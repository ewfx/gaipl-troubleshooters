# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

# [START gke_release_kubernetes_manifests_microservices_demo]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chime
  labels:
    app: chime
spec:
  selector:
    matchLabels:
      app: chime
  template:
    metadata:
      labels:
        app: chime
    spec:
      serviceAccountName: chime
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: chime
  labels:
    app: chime
spec:
  type: ClusterIP
  selector:
    app: chime
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mortgagelending
  labels:
    app: mortgagelending
spec:
  selector:
    matchLabels:
      app: mortgagelending
  template:
    metadata:
      labels:
        app: mortgagelending
    spec:
      serviceAccountName: mortgagelending
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          ports:
          - containerPort: 5050
          readinessProbe:
            grpc:
              port: 5050
          livenessProbe:
            grpc:
              port: 5050
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "ftl:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "consumerloan:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentgateway:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "chime:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "welpay:7000"
          - name: CART_SERVICE_ADDR
            value: "swift:7070"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mortgagelending
  labels:
    app: mortgagelending
spec:
  type: ClusterIP
  selector:
    app: mortgagelending
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mortgagelending
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iris
  labels:
    app: iris
spec:
  selector:
    matchLabels:
      app: iris
  template:
    metadata:
      labels:
        app: iris
    spec:
      serviceAccountName: iris
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "ftl:3550"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: iris
  labels:
    app: iris
spec:
  type: ClusterIP
  selector:
    app: iris
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: iris
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gargantua
  labels:
    app: gargantua
spec:
  selector:
    matchLabels:
      app: gargantua
  template:
    metadata:
      labels:
        app: gargantua
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: gargantua
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "ftl:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "welpay:7000"
          - name: CART_SERVICE_ADDR
            value: "swift:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "iris:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "consumerloan:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "mortgagelending:5050"
          - name: AD_SERVICE_ADDR
            value: "safeagent:9555"
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: "shoppingassistantservice:80"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp
          # - name: ENV_PLATFORM
          #   value: "aws"
          - name: ENABLE_PROFILER
            value: "0"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          # - name: ENABLE_ASSISTANT
          #   value: "true"
          # - name: FRONTEND_MESSAGE
          #   value: "Replace this with a message you want to display on all pages."
          # As part of an optional Google Cloud demo, you can run an optional microservice called the "packaging service".
          # - name: PACKAGING_SERVICE_URL
          #   value: "" # This value would look like "http://123.123.123"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: gargantua
  labels:
    app: gargantua
spec:
  type: ClusterIP
  selector:
    app: gargantua
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: gargantua-external
  labels:
    app: gargantua
spec:
  type: LoadBalancer
  selector:
    app: gargantua
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gargantua
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentgateway
  labels:
    app: paymentgateway
spec:
  selector:
    matchLabels:
      app: paymentgateway
  template:
    metadata:
      labels:
        app: paymentgateway
    spec:
      serviceAccountName: paymentgateway
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentgateway
  labels:
    app: paymentgateway
spec:
  type: ClusterIP
  selector:
    app: paymentgateway
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: paymentgateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftl
  labels:
    app: ftl
spec:
  selector:
    matchLabels:
      app: ftl
  template:
    metadata:
      labels:
        app: ftl
    spec:
      serviceAccountName: ftl
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 3550
        livenessProbe:
          grpc:
            port: 3550
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: ftl
  labels:
    app: ftl
spec:
  type: ClusterIP
  selector:
    app: ftl
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ftl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swift
  labels:
    app: swift
spec:
  selector:
    matchLabels:
      app: swift
  template:
    metadata:
      labels:
        app: swift
    spec:
      serviceAccountName: swif
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "vaultwise:6379"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          grpc:
            port: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: swift
  labels:
    app: swift
spec:
  type: ClusterIP
  selector:
    app: swift
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: swift
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwise
  labels:
    app: vaultwise
spec:
  selector:
    matchLabels:
      app: vaultwise
  template:
    metadata:
      labels:
        app: vaultwise
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwise
  labels:
    app: vaultwise
spec:
  type: ClusterIP
  selector:
    app: vaultwise
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: welcredit
  labels:
    app: welcredit
spec:
  selector:
    matchLabels:
      app: welcredit
  replicas: 1
  template:
    metadata:
      labels:
        app: welcredit
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: welcredit
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          MAX_RETRIES=12
          RETRY_INTERVAL=10
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i: Pinging gargantua: ${gargantua_ADDR}..."
            STATUSCODE=$(wget --server-response http://${gargantua_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
            if [ $STATUSCODE -eq 200 ]; then
                echo "gargantua is reachable."
                exit 0
            fi
            echo "Error: Could not reach gargantua - Status code: ${STATUSCODE}"
            sleep $RETRY_INTERVAL
          done
          echo "Failed to reach gargantua after $MAX_RETRIES attempts."
          exit 1
        name: gargantua-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: busybox:latest
        env:
        - name: gargantua_ADDR
          value: "gargantua:80"
      containers:
      - name: main
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
        env:
        - name: gargantua_ADDR
          value: "gargantua:80"
        - name: USERS
          value: "10"
        - name: RATE
          value: "1"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: welcredit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: welpay
  labels:
    app: welpay
spec:
  selector:
    matchLabels:
      app: welpay
  template:
    metadata:
      labels:
        app: welpay
    spec:
      serviceAccountName: welpay
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 7000
        livenessProbe:
          grpc:
            port: 7000
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: welpay
  labels:
    app: welpay
spec:
  type: ClusterIP
  selector:
    app: welpay
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: welpay
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumerloan
  labels:
    app: consumerloan
spec:
  selector:
    matchLabels:
      app: consumerloan
  template:
    metadata:
      labels:
        app: consumerloan
    spec:
      serviceAccountName: consumerloan
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: consumerloan
  labels:
    app: consumerloan
spec:
  type: ClusterIP
  selector:
    app: consumerloan
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consumerloan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: safeagent
  labels:
    app: safeagent
spec:
  selector:
    matchLabels:
      app: safeagent
  template:
    metadata:
      labels:
        app: safeagent
    spec:
      serviceAccountName: safeagent
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
---
apiVersion: v1
kind: Service
metadata:
  name: safeagent
  labels:
    app: safeagent
spec:
  type: ClusterIP
  selector:
    app: safeagent
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: safeagent
# [END gke_release_kubernetes_manifests_microservices_demo]
